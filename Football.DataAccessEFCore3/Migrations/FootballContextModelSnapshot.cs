// <auto-generated />
using System;
using Football.DataAccessEFCore3.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Football.DataAccessEFCore3.Migrations
{
    [DbContext(typeof(FootballContext))]
    partial class FootballContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Abono", b =>
                {
                    b.Property<int>("IdAbono")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_abono");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAbono"), 1L, 1);

                    b.Property<int?>("CodCompeticion")
                        .HasColumnType("int")
                        .HasColumnName("cod_competicion");

                    b.Property<int?>("CodZona")
                        .HasColumnType("int")
                        .HasColumnName("cod_zona");

                    b.Property<string>("LoginName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("loginName");

                    b.HasKey("IdAbono")
                        .HasName("PK__abono__1E6B9583BC7B6591");

                    b.HasIndex("CodZona");

                    b.HasIndex("LoginName", "CodCompeticion")
                        .IsUnique()
                        .HasDatabaseName("UQ__abono__4A62EF7D0F85E508")
                        .HasFilter("[loginName] IS NOT NULL AND [cod_competicion] IS NOT NULL");

                    b.ToTable("abono", (string)null);
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Agenda", b =>
                {
                    b.Property<int>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_evento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvento"), 1L, 1);

                    b.Property<int?>("CodCalendario")
                        .HasColumnType("int")
                        .HasColumnName("cod_calendario");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo");

                    b.HasKey("IdEvento")
                        .HasName("PK__agenda__AF150CA507B5EB6B");

                    b.ToTable("agenda", (string)null);
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Arbitro", b =>
                {
                    b.Property<int>("CodArbitro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Arbitro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodArbitro"), 1L, 1);

                    b.Property<int?>("AnosActivo")
                        .HasColumnType("int")
                        .HasColumnName("Anos_Activo");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Colegio")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Foto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("CodArbitro")
                        .HasName("PK__Arbitro__C117B4EE6864E33C");

                    b.ToTable("Arbitro");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Asiento", b =>
                {
                    b.Property<int>("CodCompeticion")
                        .HasColumnType("int")
                        .HasColumnName("cod_competicion");

                    b.Property<int>("RefZona")
                        .HasColumnType("int")
                        .HasColumnName("ref_zona");

                    b.Property<int?>("Libres")
                        .HasColumnType("int")
                        .HasColumnName("libres");

                    b.Property<float?>("Precio")
                        .HasColumnType("real")
                        .HasColumnName("precio");

                    b.HasKey("CodCompeticion", "RefZona")
                        .HasName("PK__asiento__2DDFBB74B7935AF9");

                    b.ToTable("asiento", (string)null);
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Calendario", b =>
                {
                    b.Property<int>("CodCalendario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cod_calendario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodCalendario"), 1L, 1);

                    b.Property<int>("CodCompeticion")
                        .HasColumnType("int")
                        .HasColumnName("cod_Competicion");

                    b.Property<int>("CodLocal")
                        .HasColumnType("int")
                        .HasColumnName("cod_Local");

                    b.Property<int>("CodVisitante")
                        .HasColumnType("int")
                        .HasColumnName("cod_Visitante");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("Jornada")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("jornada");

                    b.Property<int?>("MatchCodPartido")
                        .HasColumnType("int");

                    b.HasKey("CodCalendario")
                        .HasName("PK__Calendar__C0C368B419E86DF6");

                    b.HasIndex("MatchCodPartido");

                    b.ToTable("Calendario");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Cambio", b =>
                {
                    b.Property<int>("CodCambio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Cambio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodCambio"), 1L, 1);

                    b.Property<int>("CodJugadorEntra")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Jugador_Entra");

                    b.Property<int>("CodJugadorSale")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Jugador_Sale");

                    b.Property<int>("CodPartido")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Partido");

                    b.Property<int>("Minuto")
                        .HasColumnType("int");

                    b.HasKey("CodCambio")
                        .HasName("PK__Cambio__82EA1AC42870933A");

                    b.HasIndex("CodJugadorEntra");

                    b.HasIndex("CodJugadorSale");

                    b.HasIndex("CodPartido");

                    b.ToTable("Cambio");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Clasificacion", b =>
                {
                    b.Property<int>("CodCompeticion")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Competicion");

                    b.Property<int>("Jornada")
                        .HasColumnType("int")
                        .HasColumnName("jornada");

                    b.Property<int>("CodEquipo")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Equipo");

                    b.Property<int>("Posicion")
                        .HasColumnType("int")
                        .HasColumnName("posicion");

                    b.Property<int?>("Empatados")
                        .HasColumnType("int")
                        .HasColumnName("empatados");

                    b.Property<int?>("Ganados")
                        .HasColumnType("int")
                        .HasColumnName("ganados");

                    b.Property<int?>("GolesContra")
                        .HasColumnType("int")
                        .HasColumnName("goles_contra");

                    b.Property<int?>("GolesFavor")
                        .HasColumnType("int")
                        .HasColumnName("goles_favor");

                    b.Property<int?>("Perdidos")
                        .HasColumnType("int")
                        .HasColumnName("perdidos");

                    b.Property<int?>("Puntos")
                        .HasColumnType("int")
                        .HasColumnName("puntos");

                    b.HasKey("CodCompeticion", "Jornada", "CodEquipo", "Posicion")
                        .HasName("PK__Clasific__38DD26DC8262AF4E");

                    b.HasIndex("CodEquipo");

                    b.ToTable("Clasificacion");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Comentario", b =>
                {
                    b.Property<int>("CodComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Comentario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodComentario"), 1L, 1);

                    b.Property<string>("Autor")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("autor");

                    b.Property<int>("CodNoticia")
                        .HasColumnType("int")
                        .HasColumnName("cod_Noticia");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("Texto")
                        .HasColumnType("text")
                        .HasColumnName("texto");

                    b.Property<string>("Titulo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("titulo");

                    b.HasKey("CodComentario")
                        .HasName("PK__Comentar__A48D582F2347E01F");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Competicion", b =>
                {
                    b.Property<int>("CodCompeticion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Competicion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodCompeticion"), 1L, 1);

                    b.Property<string>("Campeon")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CompetitionLogoGlobalMediaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Fin");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Inicio");

                    b.Property<string>("Foto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("foto");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Temporada")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("temporada");

                    b.Property<string>("Tipo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipo");

                    b.HasKey("CodCompeticion")
                        .HasName("PK__Competic__EFAD7B6AC59DC2E9");

                    b.HasIndex("CompetitionLogoGlobalMediaId");

                    b.ToTable("Competicion");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Countries", b =>
                {
                    b.Property<string>("CountryCode")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .HasColumnName("countryCode")
                        .IsFixedLength();

                    b.Property<string>("LanguageCode")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .HasColumnName("languageCode")
                        .IsFixedLength();

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("countryName");

                    b.HasKey("CountryCode", "LanguageCode");

                    b.HasIndex("LanguageCode");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Directivo", b =>
                {
                    b.Property<int>("CodIntegrante")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Integrante");

                    b.Property<int>("CodEquipo")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Equipo");

                    b.Property<int>("VersionIntegrante")
                        .HasColumnType("int")
                        .HasColumnName("Version_Integrante");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("CodDirectivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Directivo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodDirectivo"), 1L, 1);

                    b.Property<string>("Profesion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("CodIntegrante", "CodEquipo", "VersionIntegrante")
                        .HasName("PK__Directiv__80B369C491BE850F");

                    b.HasIndex("CodEquipo");

                    b.ToTable("Directivo");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Entrenador", b =>
                {
                    b.Property<int>("CodIntegrante")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Integrante");

                    b.Property<int>("CodEquipo")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Equipo");

                    b.Property<int>("VersionIntegrante")
                        .HasColumnType("int")
                        .HasColumnName("Version_Integrante");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CodEntrenador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Entrenador");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodEntrenador"), 1L, 1);

                    b.Property<DateTime?>("FechaProfesional")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Profesional");

                    b.HasKey("CodIntegrante", "CodEquipo", "VersionIntegrante")
                        .HasName("PK__Entrenad__80B369C4C98831BD");

                    b.HasIndex("CodEquipo");

                    b.ToTable("Entrenador");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Equipo", b =>
                {
                    b.Property<int>("CodEquipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Equipo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodEquipo"), 1L, 1);

                    b.Property<int?>("CodEstadio")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Estadio");

                    b.Property<string>("FotoEscudo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Foto_Escudo");

                    b.Property<string>("FotoPlantilla")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Foto_Plantilla");

                    b.Property<string>("Localidad")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("TeamPictureGlobalMediaId")
                        .HasColumnType("int");

                    b.HasKey("CodEquipo")
                        .HasName("PK__Equipo__FE190172A303E7EF");

                    b.HasIndex("CodEstadio");

                    b.HasIndex("TeamPictureGlobalMediaId");

                    b.ToTable("Equipo");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.EquiposParticipan", b =>
                {
                    b.Property<int>("CodCompeticion")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Competicion");

                    b.Property<int>("CodEquipo")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Equipo");

                    b.HasKey("CodCompeticion", "CodEquipo")
                        .HasName("PK__EquiposP__D04CEB7DEB21C6E3");

                    b.HasIndex("CodEquipo");

                    b.ToTable("EquiposParticipan");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Estadio", b =>
                {
                    b.Property<int>("CodEstadio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Estadio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodEstadio"), 1L, 1);

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Foto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("PictureGlobalMediaId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("CodEstadio")
                        .HasName("PK__Estadio__7517D2A58A94C613");

                    b.HasIndex("PictureGlobalMediaId");

                    b.ToTable("Estadio");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.GlobalMedia", b =>
                {
                    b.Property<int>("GlobalMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GlobalMediaId"), 1L, 1);

                    b.Property<string>("BlobStorageContainer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlobStorageReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GlobalMediaId");

                    b.ToTable("GlobalMedia");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Gol", b =>
                {
                    b.Property<int>("CodGol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Gol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodGol"), 1L, 1);

                    b.Property<int>("CodJugador")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Jugador");

                    b.Property<int>("CodPartido")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Partido");

                    b.Property<int>("Minuto")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Video")
                        .HasColumnType("text")
                        .HasColumnName("video");

                    b.HasKey("CodGol")
                        .HasName("PK__Gol__0604040C0A22D869");

                    b.HasIndex("CodJugador");

                    b.HasIndex("CodPartido");

                    b.ToTable("Gol");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.HcoIntegrante", b =>
                {
                    b.Property<int>("CodIntegrante")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Integrante");

                    b.Property<int>("CodEquipo")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Equipo");

                    b.Property<int>("VersionIntegrante")
                        .HasColumnType("int")
                        .HasColumnName("Version_Integrante");

                    b.Property<int?>("Dorsal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Fin");

                    b.Property<DateTime?>("FechaFinContrato")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Fin_Contrato");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Inicio");

                    b.Property<float?>("Sueldo")
                        .HasColumnType("real");

                    b.HasKey("CodIntegrante", "CodEquipo", "VersionIntegrante")
                        .HasName("PK__Hco_Inte__80B369C4638A5B22");

                    b.HasIndex("CodEquipo");

                    b.ToTable("Hco_Integrante", (string)null);
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Integrante", b =>
                {
                    b.Property<int>("CodInt")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Int");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaNac")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Nac");

                    b.Property<string>("Foto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("PictureGlobalMediaId")
                        .HasColumnType("int");

                    b.HasKey("CodInt")
                        .HasName("PK__Integran__0488816542B2EB29");

                    b.HasIndex("PictureGlobalMediaId");

                    b.ToTable("Integrante");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Jugador", b =>
                {
                    b.Property<int>("CodJugador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Jugador");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodJugador"), 1L, 1);

                    b.Property<float?>("Altura")
                        .HasColumnType("real");

                    b.Property<int?>("CodEquipo")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Equipo");

                    b.Property<int?>("CodIntegrante")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Integrante");

                    b.Property<bool>("Married")
                        .HasColumnType("bit");

                    b.Property<string>("Pierna")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Posicion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<int?>("VersionIntegrante")
                        .HasColumnType("int")
                        .HasColumnName("Version_Integrante");

                    b.HasKey("CodJugador")
                        .HasName("PK__Jugador__311588804F56E76B");

                    b.HasIndex("CodEquipo");

                    b.HasIndex("CodIntegrante");

                    b.ToTable("Jugador");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Languages", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .HasColumnName("languageCode")
                        .IsFixedLength();

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("languageName");

                    b.HasKey("LanguageCode");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.LineaPedido", b =>
                {
                    b.Property<int>("Idpedido")
                        .HasColumnType("int")
                        .HasColumnName("idpedido");

                    b.Property<int>("Idlinea")
                        .HasColumnType("int")
                        .HasColumnName("idlinea");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("Disp")
                        .HasColumnType("int")
                        .HasColumnName("disp");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<float>("Pvp")
                        .HasColumnType("real")
                        .HasColumnName("pvp");

                    b.HasKey("Idpedido", "Idlinea")
                        .HasName("PK__LineaPed__3565A2260C680D70");

                    b.ToTable("LineaPedido");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Medico", b =>
                {
                    b.Property<int>("CodMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Medico");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodMedico"), 1L, 1);

                    b.Property<int>("CodEquipo")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Equipo");

                    b.Property<int>("CodIntegrante")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Integrante");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("FechaProfesional")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Profesional");

                    b.Property<int>("VersionIntegrante")
                        .HasColumnType("int")
                        .HasColumnName("Version_Integrante");

                    b.HasKey("CodMedico")
                        .HasName("PK__Medico__18937FE2AD662269");

                    b.HasIndex("CodEquipo");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Noticia", b =>
                {
                    b.Property<int>("CodNoticia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Noticia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodNoticia"), 1L, 1);

                    b.Property<string>("Autor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("autor");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("CodPartido")
                        .HasColumnType("int")
                        .HasColumnName("cod_Partido");

                    b.Property<string>("Cuerpo")
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("Foto")
                        .HasColumnType("text")
                        .HasColumnName("foto");

                    b.Property<string>("Resumen")
                        .HasColumnType("text");

                    b.Property<string>("SubCategoria")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Titulo")
                        .HasColumnType("text");

                    b.HasKey("CodNoticia")
                        .HasName("PK__Noticia__A76A776C50E2F9FA");

                    b.ToTable("Noticia");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Partido", b =>
                {
                    b.Property<int>("CodPartido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Partido");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodPartido"), 1L, 1);

                    b.Property<int?>("Asistencia")
                        .HasColumnType("int");

                    b.Property<string>("Clima")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CodArbitro")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Arbitro");

                    b.Property<int>("CodCompeticion")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Competicion");

                    b.Property<int>("CodEstadio")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Estadio");

                    b.Property<int>("CodLocal")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Local");

                    b.Property<int>("CodVisitante")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Visitante");

                    b.Property<int>("CornersLocal")
                        .HasColumnType("int")
                        .HasColumnName("Corners_Local");

                    b.Property<int>("CornersVisitante")
                        .HasColumnType("int")
                        .HasColumnName("Corners_Visitante");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("FuerasJuegoLocal")
                        .HasColumnType("int")
                        .HasColumnName("Fueras_Juego_Local");

                    b.Property<int>("FuerasJuegoVisitante")
                        .HasColumnType("int")
                        .HasColumnName("Fueras_Juego_Visitante");

                    b.Property<int>("GolesLocal")
                        .HasColumnType("int")
                        .HasColumnName("Goles_Local");

                    b.Property<int>("GolesVisitante")
                        .HasColumnType("int")
                        .HasColumnName("Goles_Visitante");

                    b.Property<string>("Jornada")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<float>("PosesionLocal")
                        .HasColumnType("real")
                        .HasColumnName("Posesion_Local");

                    b.Property<float>("PosesionVisitante")
                        .HasColumnType("real")
                        .HasColumnName("Posesion_Visitante");

                    b.HasKey("CodPartido")
                        .HasName("PK__Partido__7E512A7A7524CB5D");

                    b.HasIndex("CodArbitro");

                    b.HasIndex("CodCompeticion");

                    b.HasIndex("CodEstadio");

                    b.HasIndex("CodLocal");

                    b.HasIndex("CodVisitante");

                    b.ToTable("Partido");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.PartidoJugado", b =>
                {
                    b.Property<int>("CodJugador")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Jugador");

                    b.Property<int>("CodPartido")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Partido");

                    b.Property<int>("Asistencias")
                        .HasColumnType("int");

                    b.Property<int>("AsistenciasGol")
                        .HasColumnType("int")
                        .HasColumnName("Asistencias_Gol");

                    b.Property<int>("BalonesPerdidos")
                        .HasColumnType("int")
                        .HasColumnName("balones_perdidos");

                    b.Property<int>("BalonesRecuperados")
                        .HasColumnType("int")
                        .HasColumnName("balones_recuperados");

                    b.Property<int>("Corners")
                        .HasColumnType("int")
                        .HasColumnName("corners");

                    b.Property<int>("FaltasCometidas")
                        .HasColumnType("int")
                        .HasColumnName("Faltas_Cometidas");

                    b.Property<int>("FaltasRecibidas")
                        .HasColumnType("int")
                        .HasColumnName("Faltas_Recibidas");

                    b.Property<int>("FuerasJuego")
                        .HasColumnType("int")
                        .HasColumnName("fueras_Juego");

                    b.Property<int>("Minutos")
                        .HasColumnType("int");

                    b.Property<int>("PenaltisCometidos")
                        .HasColumnType("int")
                        .HasColumnName("penaltis_cometidos");

                    b.Property<int>("PenaltisRecibidos")
                        .HasColumnType("int")
                        .HasColumnName("penaltis_recibidos");

                    b.Property<int>("Remates")
                        .HasColumnType("int")
                        .HasColumnName("remates");

                    b.Property<int>("RematesPorteria")
                        .HasColumnType("int")
                        .HasColumnName("remates_Porteria");

                    b.Property<int>("RematesPoste")
                        .HasColumnType("int")
                        .HasColumnName("remates_Poste");

                    b.Property<int>("TarjetasAmarillasProvocadas")
                        .HasColumnType("int")
                        .HasColumnName("tarjetas_Amarillas_Provocadas");

                    b.Property<int>("TarjetasRojasProvocadas")
                        .HasColumnType("int")
                        .HasColumnName("tarjetas_Rojas_Provocadas");

                    b.Property<string>("Titular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("CodJugador", "CodPartido")
                        .HasName("PK__Partido___86F09A27E3058A54");

                    b.HasIndex("CodPartido");

                    b.ToTable("Partido_Jugado", (string)null);
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Pedidos", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPedido");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPedido"), 1L, 1);

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("calle");

                    b.Property<int>("Cp")
                        .HasColumnType("int")
                        .HasColumnName("cp");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("estado")
                        .HasDefaultValueSql("('Pendiente')");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<DateTime>("Fechatarjeta")
                        .HasColumnType("datetime")
                        .HasColumnName("fechatarjeta");

                    b.Property<string>("IdUsuario")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("idUsuario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre");

                    b.Property<int>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("numero");

                    b.Property<string>("Puerta")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("puerta");

                    b.Property<string>("Tarjeta")
                        .IsRequired()
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("tarjeta");

                    b.HasKey("IdPedido")
                        .HasName("PK__pedidos__A9F619B737664567");

                    b.ToTable("pedidos", (string)null);
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Producto", b =>
                {
                    b.Property<int>("ProdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("prodId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdId"), 1L, 1);

                    b.Property<string>("Categoria")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("categoria");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaAlta")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaAlta");

                    b.Property<string>("Foto")
                        .HasColumnType("text")
                        .HasColumnName("foto");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<float?>("Precio")
                        .HasColumnType("real")
                        .HasColumnName("precio");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("ProdId")
                        .HasName("PK__Producto__319F67F18283D8BE");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Tarjeta", b =>
                {
                    b.Property<int>("CodTarjeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Tarjeta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTarjeta"), 1L, 1);

                    b.Property<int>("CodJugador")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Jugador");

                    b.Property<int>("CodPartido")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Partido");

                    b.Property<int>("Minuto")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("CodTarjeta")
                        .HasName("PK__Tarjeta__D5EE15398F60B8AF");

                    b.HasIndex("CodJugador");

                    b.HasIndex("CodPartido");

                    b.ToTable("Tarjeta");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Transpaso", b =>
                {
                    b.Property<int>("CodTranspaso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Transpaso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTranspaso"), 1L, 1);

                    b.Property<int>("CodEquipoDestino")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Equipo_Destino");

                    b.Property<int>("CodEquipoOrigen")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Equipo_Origen");

                    b.Property<int>("CodIntegrante")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Integrante");

                    b.Property<float>("Coste")
                        .HasColumnType("real");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.HasKey("CodTranspaso")
                        .HasName("PK__Transpas__94AB3B39BE7F2969");

                    b.HasIndex("CodEquipoDestino");

                    b.HasIndex("CodEquipoOrigen");

                    b.ToTable("Transpaso");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Trata", b =>
                {
                    b.Property<int>("CodTratamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Tratamiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTratamiento"), 1L, 1);

                    b.Property<int>("CodJugador")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Jugador");

                    b.Property<int>("CodMedico")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Medico");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Fin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Inicio");

                    b.Property<string>("Lesion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("CodTratamiento")
                        .HasName("PK__Trata__17B0DB894F867B70");

                    b.HasIndex("CodJugador");

                    b.HasIndex("CodMedico");

                    b.ToTable("Trata");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.UserProfile", b =>
                {
                    b.Property<string>("LoginName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("loginName");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("country");

                    b.Property<int?>("Cp")
                        .HasColumnType("int")
                        .HasColumnName("cp");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("direccion");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("dni");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("email");

                    b.Property<string>("EnPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("enPassword");

                    b.Property<string>("FechaTarjeta")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("fechaTarjeta");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("firstName");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("language");

                    b.Property<string>("Localidad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("localidad");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("surname");

                    b.Property<string>("Tarjeta")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("tarjeta");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telefono");

                    b.HasKey("LoginName");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.ZonaEstadio", b =>
                {
                    b.Property<int>("IdZona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_zona");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZona"), 1L, 1);

                    b.Property<int?>("Capacidad")
                        .HasColumnType("int")
                        .HasColumnName("capacidad");

                    b.Property<string>("Cubierto")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cubierto");

                    b.Property<string>("Nombre")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nombre");

                    b.HasKey("IdZona")
                        .HasName("PK__zonaEsta__67C93611F159F2D3");

                    b.ToTable("zonaEstadio", (string)null);
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Abono", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.ZonaEstadio", "CodZonaNavigation")
                        .WithMany("Abono")
                        .HasForeignKey("CodZona")
                        .HasConstraintName("FK__abono__cod_zona__06CD04F7");

                    b.Navigation("CodZonaNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Calendario", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Partido", "MatchCodPartidoNavigation")
                        .WithMany("Calendario")
                        .HasForeignKey("MatchCodPartido");

                    b.Navigation("MatchCodPartidoNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Cambio", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Jugador", "CodJugadorEntraNavigation")
                        .WithMany("CambioCodJugadorEntraNavigation")
                        .HasForeignKey("CodJugadorEntra")
                        .IsRequired()
                        .HasConstraintName("FK__Cambio__Cod_Juga__08B54D69");

                    b.HasOne("Football.DataAccessEFCore3.Models.Jugador", "CodJugadorSaleNavigation")
                        .WithMany("CambioCodJugadorSaleNavigation")
                        .HasForeignKey("CodJugadorSale")
                        .IsRequired()
                        .HasConstraintName("FK__Cambio__Cod_Juga__09A971A2");

                    b.HasOne("Football.DataAccessEFCore3.Models.Partido", "CodPartidoNavigation")
                        .WithMany("Cambio")
                        .HasForeignKey("CodPartido")
                        .IsRequired()
                        .HasConstraintName("FK__Cambio__Cod_Part__07C12930");

                    b.Navigation("CodJugadorEntraNavigation");

                    b.Navigation("CodJugadorSaleNavigation");

                    b.Navigation("CodPartidoNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Clasificacion", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Competicion", "CodCompeticionNavigation")
                        .WithMany("Clasificacion")
                        .HasForeignKey("CodCompeticion")
                        .IsRequired()
                        .HasConstraintName("FK__Clasifica__Cod_C__0A9D95DB");

                    b.HasOne("Football.DataAccessEFCore3.Models.Equipo", "CodEquipoNavigation")
                        .WithMany("Clasificacion")
                        .HasForeignKey("CodEquipo")
                        .IsRequired()
                        .HasConstraintName("FK__Clasifica__Cod_E__0B91BA14");

                    b.Navigation("CodCompeticionNavigation");

                    b.Navigation("CodEquipoNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Competicion", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.GlobalMedia", "CompetitionLogoGlobalMedia")
                        .WithMany("Competicion")
                        .HasForeignKey("CompetitionLogoGlobalMediaId");

                    b.Navigation("CompetitionLogoGlobalMedia");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Countries", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Languages", "LanguageCodeNavigation")
                        .WithMany("Countries")
                        .HasForeignKey("LanguageCode")
                        .IsRequired()
                        .HasConstraintName("FK_Languages");

                    b.Navigation("LanguageCodeNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Directivo", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Equipo", "CodEquipoNavigation")
                        .WithMany("Directivo")
                        .HasForeignKey("CodEquipo")
                        .IsRequired()
                        .HasConstraintName("FK__Directivo__Cod_E__0D7A0286");

                    b.Navigation("CodEquipoNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Entrenador", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Equipo", "CodEquipoNavigation")
                        .WithMany("Entrenador")
                        .HasForeignKey("CodEquipo")
                        .IsRequired()
                        .HasConstraintName("FK__Entrenado__Cod_E__0E6E26BF");

                    b.Navigation("CodEquipoNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Equipo", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Estadio", "CodEstadioNavigation")
                        .WithMany("Equipo")
                        .HasForeignKey("CodEstadio");

                    b.HasOne("Football.DataAccessEFCore3.Models.GlobalMedia", "TeamPictureGlobalMedia")
                        .WithMany("Equipo")
                        .HasForeignKey("TeamPictureGlobalMediaId");

                    b.Navigation("CodEstadioNavigation");

                    b.Navigation("TeamPictureGlobalMedia");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.EquiposParticipan", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Competicion", "CodCompeticionNavigation")
                        .WithMany("EquiposParticipan")
                        .HasForeignKey("CodCompeticion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Football.DataAccessEFCore3.Models.Equipo", "CodEquipoNavigation")
                        .WithMany("EquiposParticipan")
                        .HasForeignKey("CodEquipo")
                        .IsRequired()
                        .HasConstraintName("FK__EquiposPa__Cod_E__0F624AF8");

                    b.Navigation("CodCompeticionNavigation");

                    b.Navigation("CodEquipoNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Estadio", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.GlobalMedia", "PictureGlobalMedia")
                        .WithMany("Estadio")
                        .HasForeignKey("PictureGlobalMediaId");

                    b.Navigation("PictureGlobalMedia");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Gol", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Jugador", "CodJugadorNavigation")
                        .WithMany("Gol")
                        .HasForeignKey("CodJugador")
                        .IsRequired()
                        .HasConstraintName("FK__Gol__Cod_Jugador__114A936A");

                    b.HasOne("Football.DataAccessEFCore3.Models.Partido", "CodPartidoNavigation")
                        .WithMany("Gol")
                        .HasForeignKey("CodPartido")
                        .IsRequired()
                        .HasConstraintName("FK__Gol__Cod_Partido__10566F31");

                    b.Navigation("CodJugadorNavigation");

                    b.Navigation("CodPartidoNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.HcoIntegrante", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Equipo", "CodEquipoNavigation")
                        .WithMany("HcoIntegrante")
                        .HasForeignKey("CodEquipo")
                        .IsRequired()
                        .HasConstraintName("FK__Hco_Integ__Cod_E__1332DBDC");

                    b.HasOne("Football.DataAccessEFCore3.Models.Integrante", "CodIntegranteNavigation")
                        .WithMany("HcoIntegrante")
                        .HasForeignKey("CodIntegrante")
                        .IsRequired()
                        .HasConstraintName("FK__Hco_Integ__Cod_I__123EB7A3");

                    b.Navigation("CodEquipoNavigation");

                    b.Navigation("CodIntegranteNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Integrante", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.GlobalMedia", "PictureGlobalMedia")
                        .WithMany("Integrante")
                        .HasForeignKey("PictureGlobalMediaId");

                    b.Navigation("PictureGlobalMedia");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Jugador", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Equipo", "CodEquipoNavigation")
                        .WithMany("Jugador")
                        .HasForeignKey("CodEquipo")
                        .HasConstraintName("FK__Jugador__Cod_Equ__14270015");

                    b.HasOne("Football.DataAccessEFCore3.Models.Integrante", "CodIntegranteNavigation")
                        .WithMany("Jugador")
                        .HasForeignKey("CodIntegrante")
                        .HasConstraintName("FK_Jugador_Integrante");

                    b.Navigation("CodEquipoNavigation");

                    b.Navigation("CodIntegranteNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.LineaPedido", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Pedidos", "IdpedidoNavigation")
                        .WithMany("LineaPedido")
                        .HasForeignKey("Idpedido")
                        .IsRequired()
                        .HasConstraintName("FK__LineaPedi__idped__160F4887");

                    b.Navigation("IdpedidoNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Medico", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Equipo", "CodEquipoNavigation")
                        .WithMany("Medico")
                        .HasForeignKey("CodEquipo")
                        .IsRequired()
                        .HasConstraintName("FK__Medico__Cod_Equi__17036CC0");

                    b.Navigation("CodEquipoNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Partido", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Arbitro", "CodArbitroNavigation")
                        .WithMany("Partido")
                        .HasForeignKey("CodArbitro")
                        .IsRequired()
                        .HasConstraintName("FK__Partido__Cod_Arb__1AD3FDA4");

                    b.HasOne("Football.DataAccessEFCore3.Models.Competicion", "CodCompeticionNavigation")
                        .WithMany("Partido")
                        .HasForeignKey("CodCompeticion")
                        .IsRequired()
                        .HasConstraintName("FK__Partido__Cod_Com__17F790F9");

                    b.HasOne("Football.DataAccessEFCore3.Models.Estadio", "CodEstadioNavigation")
                        .WithMany("Partido")
                        .HasForeignKey("CodEstadio")
                        .IsRequired()
                        .HasConstraintName("FK__Partido__Cod_Est__1BC821DD");

                    b.HasOne("Football.DataAccessEFCore3.Models.Equipo", "CodLocalNavigation")
                        .WithMany("PartidoCodLocalNavigation")
                        .HasForeignKey("CodLocal")
                        .IsRequired()
                        .HasConstraintName("FK__Partido__Cod_Loc__18EBB532");

                    b.HasOne("Football.DataAccessEFCore3.Models.Equipo", "CodVisitanteNavigation")
                        .WithMany("PartidoCodVisitanteNavigation")
                        .HasForeignKey("CodVisitante")
                        .IsRequired()
                        .HasConstraintName("FK__Partido__Cod_Vis__19DFD96B");

                    b.Navigation("CodArbitroNavigation");

                    b.Navigation("CodCompeticionNavigation");

                    b.Navigation("CodEstadioNavigation");

                    b.Navigation("CodLocalNavigation");

                    b.Navigation("CodVisitanteNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.PartidoJugado", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Jugador", "CodJugadorNavigation")
                        .WithMany("PartidoJugado")
                        .HasForeignKey("CodJugador")
                        .IsRequired()
                        .HasConstraintName("FK__Partido_J__Cod_J__1CBC4616");

                    b.HasOne("Football.DataAccessEFCore3.Models.Partido", "CodPartidoNavigation")
                        .WithMany("PartidoJugado")
                        .HasForeignKey("CodPartido")
                        .IsRequired()
                        .HasConstraintName("FK__Partido_J__Cod_P__1DB06A4F");

                    b.Navigation("CodJugadorNavigation");

                    b.Navigation("CodPartidoNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Tarjeta", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Jugador", "CodJugadorNavigation")
                        .WithMany("Tarjeta")
                        .HasForeignKey("CodJugador")
                        .IsRequired()
                        .HasConstraintName("FK__Tarjeta__Cod_Jug__1F98B2C1");

                    b.HasOne("Football.DataAccessEFCore3.Models.Partido", "CodPartidoNavigation")
                        .WithMany("Tarjeta")
                        .HasForeignKey("CodPartido")
                        .IsRequired()
                        .HasConstraintName("FK__Tarjeta__Cod_Par__1EA48E88");

                    b.Navigation("CodJugadorNavigation");

                    b.Navigation("CodPartidoNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Transpaso", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Equipo", "CodEquipoDestinoNavigation")
                        .WithMany("TranspasoCodEquipoDestinoNavigation")
                        .HasForeignKey("CodEquipoDestino")
                        .IsRequired()
                        .HasConstraintName("FK__Transpaso__Cod_E__2180FB33");

                    b.HasOne("Football.DataAccessEFCore3.Models.Equipo", "CodEquipoOrigenNavigation")
                        .WithMany("TranspasoCodEquipoOrigenNavigation")
                        .HasForeignKey("CodEquipoOrigen")
                        .IsRequired()
                        .HasConstraintName("FK__Transpaso__Cod_E__208CD6FA");

                    b.Navigation("CodEquipoDestinoNavigation");

                    b.Navigation("CodEquipoOrigenNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Trata", b =>
                {
                    b.HasOne("Football.DataAccessEFCore3.Models.Jugador", "CodJugadorNavigation")
                        .WithMany("Trata")
                        .HasForeignKey("CodJugador")
                        .IsRequired()
                        .HasConstraintName("FK__Trata__Cod_Jugad__236943A5");

                    b.HasOne("Football.DataAccessEFCore3.Models.Medico", "CodMedicoNavigation")
                        .WithMany("Trata")
                        .HasForeignKey("CodMedico")
                        .IsRequired()
                        .HasConstraintName("FK__Trata__Cod_Medic__22751F6C");

                    b.Navigation("CodJugadorNavigation");

                    b.Navigation("CodMedicoNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Arbitro", b =>
                {
                    b.Navigation("Partido");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Competicion", b =>
                {
                    b.Navigation("Clasificacion");

                    b.Navigation("EquiposParticipan");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Equipo", b =>
                {
                    b.Navigation("Clasificacion");

                    b.Navigation("Directivo");

                    b.Navigation("Entrenador");

                    b.Navigation("EquiposParticipan");

                    b.Navigation("HcoIntegrante");

                    b.Navigation("Jugador");

                    b.Navigation("Medico");

                    b.Navigation("PartidoCodLocalNavigation");

                    b.Navigation("PartidoCodVisitanteNavigation");

                    b.Navigation("TranspasoCodEquipoDestinoNavigation");

                    b.Navigation("TranspasoCodEquipoOrigenNavigation");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Estadio", b =>
                {
                    b.Navigation("Equipo");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.GlobalMedia", b =>
                {
                    b.Navigation("Competicion");

                    b.Navigation("Equipo");

                    b.Navigation("Estadio");

                    b.Navigation("Integrante");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Integrante", b =>
                {
                    b.Navigation("HcoIntegrante");

                    b.Navigation("Jugador");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Jugador", b =>
                {
                    b.Navigation("CambioCodJugadorEntraNavigation");

                    b.Navigation("CambioCodJugadorSaleNavigation");

                    b.Navigation("Gol");

                    b.Navigation("PartidoJugado");

                    b.Navigation("Tarjeta");

                    b.Navigation("Trata");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Languages", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Medico", b =>
                {
                    b.Navigation("Trata");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Partido", b =>
                {
                    b.Navigation("Calendario");

                    b.Navigation("Cambio");

                    b.Navigation("Gol");

                    b.Navigation("PartidoJugado");

                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.Pedidos", b =>
                {
                    b.Navigation("LineaPedido");
                });

            modelBuilder.Entity("Football.DataAccessEFCore3.Models.ZonaEstadio", b =>
                {
                    b.Navigation("Abono");
                });
#pragma warning restore 612, 618
        }
    }
}
